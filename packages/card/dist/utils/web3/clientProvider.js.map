{"version":3,"sources":["../../../src/utils/web3/clientProvider.js"],"names":["clientProvider","opts","engine","ProviderEngine","engineParams","staticSubprovider","DefaultFixture","static","addProvider","NonceTrackerSubprovider","sanitizer","SanitizingSubprovider","cacheSubprovider","CacheSubprovider","filterSubprovider","FilterSubprovider","inflightCache","InflightCacheSubprovider","gasprice","GaspriceSubprovider","idmgmtSubprovider","HookedWalletSubprovider","dataSubprovider","FetchSubprovider","rpcUrl","originHttpHeaderKey","start","bind","stop","send","sendAsync"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACpC,MAAMC,MAAM,GAAG,IAAIC,2BAAJ,CAAmBF,IAAI,CAACG,YAAxB,CAAf,CADoC,CAGpC;;AACA,MAAMC,iBAAiB,GAAG,IAAIC,uBAAJ,CAAmBL,IAAI,CAACM,MAAxB,CAA1B;AACAL,EAAAA,MAAM,CAACM,WAAP,CAAmBH,iBAAnB,EALoC,CAOpC;;AACAH,EAAAA,MAAM,CAACM,WAAP,CAAmB,IAAIC,qBAAJ,EAAnB,EARoC,CAUpC;;AACA,MAAMC,SAAS,GAAG,IAAIC,kBAAJ,EAAlB;AACAT,EAAAA,MAAM,CAACM,WAAP,CAAmBE,SAAnB,EAZoC,CAcpC;;AACA,MAAME,gBAAgB,GAAG,IAAIC,cAAJ,EAAzB;AACAX,EAAAA,MAAM,CAACM,WAAP,CAAmBI,gBAAnB,EAhBoC,CAkBpC;;AACA,MAAME,iBAAiB,GAAG,IAAIC,gBAAJ,EAA1B;AACAb,EAAAA,MAAM,CAACM,WAAP,CAAmBM,iBAAnB,EApBoC,CAsBpC;;AACA,MAAME,aAAa,GAAG,IAAIC,sBAAJ,EAAtB;AACAf,EAAAA,MAAM,CAACM,WAAP,CAAmBQ,aAAnB;AAEA,MAAME,QAAQ,GAAG,IAAIC,4BAAJ,EAAjB;AACAjB,EAAAA,MAAM,CAACM,WAAP,CAAmBU,QAAnB;AAEA,MAAME,iBAAiB,GAAG,IAAIC,qBAAJ,iCACrBpB,IADqB,EAA1B;AAGAC,EAAAA,MAAM,CAACM,WAAP,CAAmBY,iBAAnB,EAhCoC,CAkCpC;;AACA,MAAME,eAAe,GACnBrB,IAAI,CAACqB,eAAL,IACA,IAAIC,cAAJ,CAAqB;AACnBC,IAAAA,MAAM,EAAEvB,IAAI,CAACuB,MADM;AAEnBC,IAAAA,mBAAmB,EAAExB,IAAI,CAACwB;AAFP,GAArB,CAFF;AAMAvB,EAAAA,MAAM,CAACM,WAAP,CAAmBc,eAAnB,EAzCoC,CA2CpC;;AACApB,EAAAA,MAAM,CAACwB,KAAP,GA5CoC,CA8CpC;AACA;AACA;;AACA,SAAO;AACLA,IAAAA,KAAK,EAAExB,MAAM,CAACwB,KAAP,CAAaC,IAAb,CAAkBzB,MAAlB,CADF;AAEL0B,IAAAA,IAAI,EAAE1B,MAAM,CAAC0B,IAAP,CAAYD,IAAZ,CAAiBzB,MAAjB,CAFD;AAGL2B,IAAAA,IAAI,EAAE3B,MAAM,CAAC2B,IAAP,CAAYF,IAAZ,CAAiBzB,MAAjB,CAHD;AAIL4B,IAAAA,SAAS,EAAE5B,MAAM,CAAC4B,SAAP,CAAiBH,IAAjB,CAAsBzB,MAAtB;AAJN,GAAP;AAMD,CAvDD;;eAyDeF,c","sourcesContent":["import ProviderEngine from 'web3-provider-engine';\nimport DefaultFixture from 'web3-provider-engine/subproviders/default-fixture';\nimport NonceTrackerSubprovider from 'web3-provider-engine/subproviders/nonce-tracker';\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\nimport InflightCacheSubprovider from 'web3-provider-engine/subproviders/inflight-cache';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SanitizingSubprovider from 'web3-provider-engine/subproviders/sanitizer';\nimport FetchSubprovider from 'web3-provider-engine/subproviders/fetch';\n\nimport GaspriceSubprovider from './GaspriceSubprovider';\n\nconst clientProvider = (opts = {}) => {\n  const engine = new ProviderEngine(opts.engineParams)\n\n  // static\n  const staticSubprovider = new DefaultFixture(opts.static)\n  engine.addProvider(staticSubprovider)\n\n  // nonce tracker\n  engine.addProvider(new NonceTrackerSubprovider());\n\n  // sanitization\n  const sanitizer = new SanitizingSubprovider();\n  engine.addProvider(sanitizer);\n\n  // cache layer\n  const cacheSubprovider = new CacheSubprovider();\n  engine.addProvider(cacheSubprovider);\n\n  // filters\n  const filterSubprovider = new FilterSubprovider();\n  engine.addProvider(filterSubprovider);\n\n  // inflight cache\n  const inflightCache = new InflightCacheSubprovider();\n  engine.addProvider(inflightCache);\n\n  const gasprice = new GaspriceSubprovider();\n  engine.addProvider(gasprice);\n\n  const idmgmtSubprovider = new HookedWalletSubprovider({\n    ...opts,\n  });\n  engine.addProvider(idmgmtSubprovider);\n\n  // data source\n  const dataSubprovider =\n    opts.dataSubprovider ||\n    new FetchSubprovider({\n      rpcUrl: opts.rpcUrl,\n      originHttpHeaderKey: opts.originHttpHeaderKey,\n    });\n  engine.addProvider(dataSubprovider);\n\n  // start polling\n  engine.start();\n\n  // web3 uses the presence of an 'on' method to determine\n  // if it should connect via web sockets. we create the\n  // below proxy method in order to avoid this issue.\n  return {\n    start: engine.start.bind(engine),\n    stop: engine.stop.bind(engine),\n    send: engine.send.bind(engine),\n    sendAsync: engine.sendAsync.bind(engine)\n  }\n}\n\nexport default clientProvider;\n"],"file":"clientProvider.js"}
{"version":3,"sources":["../../src/utils/getWeb3.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","web3","alreadyInjected","Web3","currentProvider","console","log","eth","provider","providers","HttpProvider"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,UAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB,CADoC,CAGpC;;AACA,UAAMC,eAAe,GAAG,OAAOD,IAAP,KAAgB,WAAxC;;AAEA,UAAIC,eAAJ,EAAqB;AACnB;AACAD,QAAAA,IAAI,GAAG,IAAIE,YAAJ,CAASF,IAAI,CAACG,eAAd,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CACE,oCADF,EAEEL,IAAI,CAACM,GAAL,CAASH,eAFX;AAIAP,QAAAA,OAAO,CAACI,IAAD,CAAP;AACD,OARD,MAQO;AACL;AACA;AACA,YAAMO,QAAQ,GAAG,IAAIL,aAAKM,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;AAGAT,QAAAA,IAAI,GAAG,IAAIE,YAAJ,CAASK,QAAT,CAAP;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAT,QAAAA,OAAO,CAACI,IAAD,CAAP;AACD;AACF,KAxBD;AAyBD,GA3BD,CADc;AAAA,CAAhB;;eA8BeN,O","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", () => {\n      let web3 = window.web3;\n\n      // Checking if Web3 has been injected by the browser (Mist/MetaMask).\n      const alreadyInjected = typeof web3 !== \"undefined\";\n\n      if (alreadyInjected) {\n        // Use Mist/MetaMask's provider.\n        web3 = new Web3(web3.currentProvider);\n        console.log(\n          \"Injected web3 detected. Provider: \",\n          web3.eth.currentProvider\n        );\n        resolve(web3);\n      } else {\n        // Fallback to localhost if no web3 injection. We've configured this to\n        // use the development console's port by default.\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;"],"file":"getWeb3.js"}
{"version":3,"sources":["../src/helpers.js"],"names":["decodeTxData","eventData","map","transactionHash","returnValues","nftcid","timeMinted","moment","unix","toString","utc","format","convertBadgeIdsToHex","badgeArray","padLeft","ethUtil","intToHex","hexString","determineStartBlock","networkId","Number"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS;AAAA,SACnC;AACA,iCAAKA,SAAL,EAAgBC,GAAhB,CAAoB;AAAA,UAAGC,eAAH,QAAGA,eAAH;AAAA,mCAAoBC,YAApB;AAAA,UAAoCC,MAApC,qBAAoCA,MAApC;AAAA,UAA4CC,UAA5C,qBAA4CA,UAA5C;AAAA,aAA+D,CACjFD,MADiF,EAEjFE,gBACGC,IADH,CACQF,UAAU,CAACG,QAAX,EADR,EAEGC,GAFH,GAGGC,MAHH,CAGU,eAHV,CAFiF,EAMjFR,eANiF,CAA/D;AAAA,KAApB;AAFmC;AAAA,CAA9B;;;;AAWA,SAASS,oBAAT,CAA8BC,UAA9B,EAA0CC,OAA1C,EAAmD;AACxD,SAAOD,UAAU,CAACX,GAAX,CAAea,wBAAQC,QAAvB,EAAiCd,GAAjC,CAAqC,UAAAe,SAAS;AAAA,WAAIH,OAAO,CAACG,SAAD,EAAY,EAAZ,CAAX;AAAA,GAA9C,CAAP;AACD;;AAEM,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AAC7C,UAAQC,MAAM,CAACD,SAAD,CAAd;AACE;AACA,SAAK,CAAL;AACE,aAAO,OAAP;AACF;;AACA,SAAK,CAAL;AACE,aAAO,OAAP;AACF;;AACA;AACE,aAAO,CAAP;AATJ;AAWD","sourcesContent":["import ethUtil from 'ethereumjs-util';\nimport flat from 'array.prototype.flat';\nimport moment from 'moment';\n\n// Serializes the event data\nexport const decodeTxData = eventData =>\n  // flattens the array and then decodes the values\n  flat(eventData).map(({ transactionHash, returnValues: { nftcid, timeMinted } }) => [\n    nftcid,\n    moment\n      .unix(timeMinted.toString())\n      .utc()\n      .format('MMMM Do, YYYY'),\n    transactionHash,\n  ]);\n\nexport function convertBadgeIdsToHex(badgeArray, padLeft) {\n  return badgeArray.map(ethUtil.intToHex).map(hexString => padLeft(hexString, 64));\n}\n\nexport function determineStartBlock(networkId) {\n  switch (Number(networkId)) {\n    // if on mainnet, start event log search on block...\n    case 1:\n      return 6442621;\n    // if on rinkeby, start event log search on block...\n    case 4:\n      return 3068896;\n    // if not on mainnet or rinkeby just start on block 0\n    default:\n      return 0;\n  }\n}\n"],"file":"helpers.js"}